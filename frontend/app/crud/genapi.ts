// autogenerated file -- do not edit

module GenModels {
  'use strict';

  export type ResourceUri = string;
  export type ApiDateTime = string;
  export type ApiDate = ApiDateTime;
  export interface ApiDict {
    [index: string]: any;
  }

  export interface abstractnamelist extends Models.BaseModel {
    endpoint: string;
    name: string;
    pk: string;
    resource_uri?: abstractnamelist_uri;
  }
  export type abstractnamelist_id = number;
  export type abstractnamelist_uri = ResourceUri;

  export interface accesslog extends Models.BaseModel {
    action: string;
    id?: accesslog_id;
    ip_address: string;
    modified_by: user_id | user_uri | user;
    modified_on: ApiDateTime;
    object_id: number;
    resource_name: string;
    resource_repr: string;
    resource_uri?: accesslog_uri;
  }
  export type accesslog_id = number;
  export type accesslog_uri = ResourceUri;

  export interface addresstype extends Models.BaseModel {
    default: boolean;
    desc: string;
    id?: addresstype_id;
    name: string;
    order: number;
    resource_uri?: addresstype_uri;
  }
  export type addresstype_id = number;
  export type addresstype_uri = ResourceUri;

  export interface bloodgroup extends Models.BaseModel {
    default: boolean;
    id?: bloodgroup_id;
    name: string;
    order: number;
    resource_uri?: bloodgroup_uri;
  }
  export type bloodgroup_id = number;
  export type bloodgroup_uri = ResourceUri;

  export interface bodypart extends Models.BaseModel {
    default: boolean;
    id?: bodypart_id;
    name: string;
    order: number;
    resource_uri?: bodypart_uri;
  }
  export type bodypart_id = number;
  export type bodypart_uri = ResourceUri;

  export interface clientlog extends Models.BaseModel {
    data: ApiDict;
    level: string;
    msg: string;
    resource_uri?: clientlog_uri;
    username: string;
  }
  export type clientlog_id = number;
  export type clientlog_uri = ResourceUri;

  export interface collaborator extends Models.BaseModel {
    data: string;
    first_name: string;
    id?: collaborator_id;
    last_name: string;
    resource_uri?: collaborator_uri;
  }
  export type collaborator_id = number;
  export type collaborator_uri = ResourceUri;

  export interface consentobtainedby extends Models.BaseModel {
    default: boolean;
    id?: consentobtainedby_id;
    name: string;
    order: number;
    resource_uri?: consentobtainedby_uri;
  }
  export type consentobtainedby_id = number;
  export type consentobtainedby_uri = ResourceUri;

  export interface consentstatus extends Models.BaseModel {
    default: boolean;
    id?: consentstatus_id;
    name: string;
    order: number;
    resource_uri?: consentstatus_uri;
  }
  export type consentstatus_id = number;
  export type consentstatus_uri = ResourceUri;

  export interface contactdetails extends Models.BaseModel {
    address_line1: string;
    address_line2: string;
    address_line3: string;
    address_line4: string;
    contact_person: string;
    email: string;
    fax: string;
    id?: contactdetails_id;
    mobile: string;
    phone_home: string;
    phone_other: string;
    phone_work: string;
    resource_uri?: contactdetails_uri;
    suburb: suburb_id | suburb_uri | suburb;
  }
  export type contactdetails_id = number;
  export type contactdetails_uri = ResourceUri;

  export interface container extends Models.BaseModel {
    capacity: number;
    cls: containerclass_id | containerclass_uri | containerclass;
    container: container_id | container_uri | container;
    data: ApiDict;
    default: boolean;
    depth: number;
    height: number;
    id?: container_id;
    name: string;
    num_samples: number;
    order: number;
    resource_uri?: container_uri;
    samples: any[];
    width: number;
  }
  export type container_id = number;
  export type container_uri = ResourceUri;

  export interface containerclass extends Models.BaseModel {
    contained_by: containerclass_id | containerclass_uri | containerclass;
    coord: string;
    def_depth: number;
    def_height: number;
    def_width: number;
    dim: number;
    id?: containerclass_id;
    name: string;
    resource_uri?: containerclass_uri;
  }
  export type containerclass_id = number;
  export type containerclass_uri = ResourceUri;

  export interface country extends Models.BaseModel {
    iso2: string;
    iso3: string;
    name: string;
    resource_uri?: country_uri;
    states: (state_id | state_uri | state)[];
  }
  export type country_id = number;
  export type country_uri = ResourceUri;

  export interface csvtemp extends Models.BaseModel {
    created: ApiDateTime;
    creator: user_id | user_uri | user;
    data: string;
    filename: string;
    header: any[];
    id?: csvtemp_id;
    num_cols: number;
    num_rows: number;
    preview: string;
    resource_uri?: csvtemp_uri;
    session_key: string;
    size: number;
  }
  export type csvtemp_id = number;
  export type csvtemp_uri = ResourceUri;

  export interface customdataschema extends Models.BaseModel {
    content_type: {
      app_label: string;
      id?: number;
      model: string;
      resource_uri?: string;
    };
    id?: customdataschema_id;
    resource_uri?: customdataschema_uri;
    schema: ApiDict;
    study: study_id | study_uri | study;
  }
  export type customdataschema_id = number;
  export type customdataschema_uri = ResourceUri;

  export interface customdropdownlist extends Models.BaseModel {
    default: boolean;
    desc: string;
    id?: customdropdownlist_id;
    name: string;
    order: number;
    resource_uri?: customdropdownlist_uri;
  }
  export type customdropdownlist_id = number;
  export type customdropdownlist_uri = ResourceUri;

  export interface customdropdownvalue extends Models.BaseModel {
    default: boolean;
    desc: string;
    id?: customdropdownvalue_id;
    name: string;
    order: number;
    resource_uri?: customdropdownvalue_uri;
  }
  export type customdropdownvalue_id = number;
  export type customdropdownvalue_uri = ResourceUri;

  export interface ddl extends Models.BaseModel {
    default: string;
    desc: string;
    id?: ddl_id;
    name: string;
    num_items: number;
    order: number;
    resource_uri?: ddl_uri;
  }
  export type ddl_id = number;
  export type ddl_uri = ResourceUri;

  export interface ddv extends Models.BaseModel {
    default: boolean;
    desc: string;
    id?: ddv_id;
    list: ddl_id | ddl_uri | ddl;
    name: string;
    order: number;
    resource_uri?: ddv_uri;
  }
  export type ddv_id = number;
  export type ddv_uri = ResourceUri;

  export interface diagnosisindex extends Models.BaseModel {
    code: string;
    default: boolean;
    desc: string;
    group: string;
    id?: diagnosisindex_id;
    name: string;
    order: number;
    resource_uri?: diagnosisindex_uri;
  }
  export type diagnosisindex_id = number;
  export type diagnosisindex_uri = ResourceUri;

  export interface dnaextractionprotocol extends Models.BaseModel {
    default: boolean;
    id?: dnaextractionprotocol_id;
    name: string;
    order: number;
    resource_uri?: dnaextractionprotocol_uri;
  }
  export type dnaextractionprotocol_id = number;
  export type dnaextractionprotocol_uri = ResourceUri;

  export interface doctor extends Models.BaseModel {
    _extra: ApiDict;
    active: boolean;
    born: boolean;
    cause_of_death: string;
    comment: string;
    contact: contactdetails_id | contactdetails_uri | contactdetails;
    data: ApiDict;
    deceased: boolean;
    dob: ApiDate;
    dob_checked: boolean;
    doctor_primary_care_trust_no: string;
    dod: ApiDate;
    dod_checked: boolean;
    first_name: string;
    gp_number: string;
    id?: doctor_id;
    initials: string;
    last_name: string;
    maiden_name: string;
    other_name: string;
    patient_id: string;
    place_of_birth: string;
    provider_num: string;
    resource_uri?: doctor_uri;
    second_name: string;
    sex: string;
    title: title_id | title_uri | title;
    twins_identical: boolean;
    type: doctortype_id | doctortype_uri | doctortype;
  }
  export type doctor_id = number;
  export type doctor_uri = ResourceUri;

  export interface doctortype extends Models.BaseModel {
    default: boolean;
    desc: string;
    id?: doctortype_id;
    name: string;
    order: number;
    resource_uri?: doctortype_uri;
  }
  export type doctortype_id = number;
  export type doctortype_uri = ResourceUri;

  export interface ethnicgroup extends Models.BaseModel {
    default: boolean;
    id?: ethnicgroup_id;
    name: string;
    order: number;
    resource_uri?: ethnicgroup_uri;
  }
  export type ethnicgroup_id = number;
  export type ethnicgroup_uri = ResourceUri;

  export interface event extends Models.BaseModel {
    _extra: ApiDict;
    data: ApiDict;
    date: ApiDateTime;
    id?: event_id;
    ident: string;
    person: person_id | person_uri | person;
    resource_uri?: event_uri;
    samples: (sample_id | sample_uri | sample)[];
    study: study_id | study_uri | study;
    type: eventtype_id | eventtype_uri | eventtype;
  }
  export type event_id = number;
  export type event_uri = ResourceUri;

  export interface eventtype extends Models.BaseModel {
    default: boolean;
    fields: ApiDict;
    id?: eventtype_id;
    name: string;
    order: number;
    resource_uri?: eventtype_uri;
    studies: (study_id | study_uri | study)[];
    super_type: eventtype_id | eventtype_uri | eventtype;
  }
  export type eventtype_id = number;
  export type eventtype_uri = ResourceUri;

  export interface failedloginlog extends Models.BaseModel {
    forwarded_by: string;
    id?: failedloginlog_id;
    ip_address: string;
    resource_uri?: failedloginlog_uri;
    timestamp: ApiDateTime;
    user_agent: string;
    username: string;
  }
  export type failedloginlog_id = number;
  export type failedloginlog_uri = ResourceUri;

  export interface familygroup extends Models.BaseModel {
    desc: string;
    id?: familygroup_id;
    members: (familymember_id | familymember_uri | familymember)[];
    resource_uri?: familygroup_uri;
  }
  export type familygroup_id = number;
  export type familygroup_uri = ResourceUri;

  export interface familymember extends Models.BaseModel {
    family_contact: boolean;
    family_group: familygroup_id | familygroup_uri | familygroup;
    id?: familymember_id;
    person: person_id | person_uri | person;
    proband: boolean;
    resource_uri?: familymember_uri;
    spokesperson: boolean;
  }
  export type familymember_id = number;
  export type familymember_uri = ResourceUri;

  export interface fileattachment extends Models.BaseModel {
    content_type: string;
    created: ApiDateTime;
    creator: user_id | user_uri | user;
    desc: string;
    file: string;
    id?: fileattachment_id;
    mime_type: string;
    name: string;
    object_id: number;
    resource_uri?: fileattachment_uri;
    url: string;
  }
  export type fileattachment_id = number;
  export type fileattachment_uri = ResourceUri;

  export interface gradestage extends Models.BaseModel {
    default: boolean;
    desc: string;
    id?: gradestage_id;
    name: string;
    order: number;
    resource_uri?: gradestage_uri;
  }
  export type gradestage_id = number;
  export type gradestage_uri = ResourceUri;

  export interface group extends Models.BaseModel {
    id?: group_id;
    name: string;
    resource_uri?: group_uri;
  }
  export type group_id = number;
  export type group_uri = ResourceUri;

  export interface hospital extends Models.BaseModel {
    default: boolean;
    id?: hospital_id;
    name: string;
    order: number;
    resource_uri?: hospital_uri;
  }
  export type hospital_id = number;
  export type hospital_uri = ResourceUri;

  export interface icd10 extends Models.BaseModel {
    default: boolean;
    desc: string;
    desc2: string;
    id?: icd10_id;
    name: string;
    order: number;
    resource_uri?: icd10_uri;
  }
  export type icd10_id = number;
  export type icd10_uri = ResourceUri;

  export interface idmap extends Models.BaseModel {
    from_table: string;
    id?: idmap_id;
    newid: string;
    oldid: string;
    resource_uri?: idmap_uri;
    to_table: string;
  }
  export type idmap_id = number;
  export type idmap_uri = ResourceUri;

  export interface instance extends Models.BaseModel {
    code: string;
    resource_uri?: instance_uri;
    title: string;
  }
  export type instance_id = number;
  export type instance_uri = ResourceUri;

  export interface intervention extends Models.BaseModel {
    abbr_name: string;
    alternative_name: string;
    comments: string;
    default: boolean;
    desc: string;
    fields: string;
    group: string;
    id?: intervention_id;
    name: string;
    order: number;
    resource_uri?: intervention_uri;
    route: string;
    units: string;
  }
  export type intervention_id = number;
  export type intervention_uri = ResourceUri;

  export interface loginlog extends Models.BaseModel {
    forwarded_by: string;
    id?: loginlog_id;
    ip_address: string;
    resource_uri?: loginlog_uri;
    timestamp: ApiDateTime;
    user_agent: string;
    username: string;
  }
  export type loginlog_id = number;
  export type loginlog_uri = ResourceUri;

  export interface metstage extends Models.BaseModel {
    default: boolean;
    desc: string;
    id?: metstage_id;
    name: string;
    order: number;
    resource_uri?: metstage_uri;
  }
  export type metstage_id = number;
  export type metstage_uri = ResourceUri;

  export interface migrationrun extends Models.BaseModel {
    finish_time: ApiDateTime;
    id?: migrationrun_id;
    report: ApiDict;
    resource_uri?: migrationrun_uri;
    start_time: ApiDateTime;
  }
  export type migrationrun_id = number;
  export type migrationrun_uri = ResourceUri;

  export interface morphology extends Models.BaseModel {
    code: string;
    default: boolean;
    group: string;
    id?: morphology_id;
    name: string;
    order: number;
    resource_uri?: morphology_uri;
  }
  export type morphology_id = number;
  export type morphology_uri = ResourceUri;

  export interface nochildren extends Models.BaseModel {
    female: person_id | person_uri | person;
    id?: nochildren_id;
    male: person_id | person_uri | person;
    notes: string;
    reason: string;
    resource_uri?: nochildren_uri;
  }
  export type nochildren_id = number;
  export type nochildren_uri = ResourceUri;

  export interface other extends Models.BaseModel {
    child: number;
    cx1: number;
    cx2: number;
    cy1: number;
    cy2: number;
    id?: other_id;
    index: number;
    main: number;
    monkey: boolean;
    nextother: number;
    resource_uri?: other_uri;
    rtype: number;
    sx1: number;
    sx2: number;
    sy1: number;
    sy2: number;
  }
  export type other_id = number;
  export type other_uri = ResourceUri;

  export interface pathlab extends Models.BaseModel {
    default: boolean;
    id?: pathlab_id;
    name: string;
    order: number;
    resource_uri?: pathlab_uri;
  }
  export type pathlab_id = number;
  export type pathlab_uri = ResourceUri;

  export interface patientcase extends Models.BaseModel {
    default: boolean;
    id?: patientcase_id;
    name: string;
    order: number;
    resource_uri?: patientcase_uri;
    study: study_id | study_uri | study;
  }
  export type patientcase_id = number;
  export type patientcase_uri = ResourceUri;

  export interface patienthascase extends Models.BaseModel {
    case: patientcase_id | patientcase_uri | patientcase;
    id?: patienthascase_id;
    resource_uri?: patienthascase_uri;
    study_member: studymember_id | studymember_uri | studymember;
  }
  export type patienthascase_id = number;
  export type patienthascase_uri = ResourceUri;

  export interface person extends Models.BaseModel {
    _extra: ApiDict;
    born: boolean;
    cause_of_death: string;
    comment: string;
    data: ApiDict;
    deceased: boolean;
    dob: ApiDate;
    dob_checked: boolean;
    dod: ApiDate;
    dod_checked: boolean;
    father: person_id | person_uri | person;
    first_name: string;
    id?: person_id;
    initials: string;
    last_name: string;
    maiden_name: string;
    mother: person_id | person_uri | person;
    other_name: string;
    patient_id: string;
    place_of_birth: string;
    resource_uri?: person_uri;
    second_name: string;
    sex: string;
    title: title_id | title_uri | title;
    twins_identical: boolean;
  }
  export type person_id = number;
  export type person_uri = ResourceUri;

  export interface personaddress extends Models.BaseModel {
    comment: string;
    contact: contactdetails_id | contactdetails_uri | contactdetails;
    created_on: ApiDateTime;
    id?: personaddress_id;
    modified_on: ApiDateTime;
    person: person_id | person_uri | person;
    private: boolean;
    resource_uri?: personaddress_uri;
    type: addresstype_id | addresstype_uri | addresstype;
  }
  export type personaddress_id = number;
  export type personaddress_uri = ResourceUri;

  export interface persondoctor extends Models.BaseModel {
    created_on: ApiDateTime;
    current: boolean;
    doctor: doctor_id | doctor_uri | doctor;
    id?: persondoctor_id;
    modified_on: ApiDateTime;
    person: person_id | person_uri | person;
    private: boolean;
    remind_client: boolean;
    remind_gp: boolean;
    resource_uri?: persondoctor_uri;
    role: string;
    role_comment: string;
    start_reminders: ApiDate;
    stop_reminders: ApiDate;
  }
  export type persondoctor_id = number;
  export type persondoctor_uri = ResourceUri;

  export interface persondup extends Models.BaseModel {
    dob: ApiDate;
    first_name: string;
    id?: persondup_id;
    last_name: string;
    other_name: string;
    patient_id: string;
    resource_uri?: persondup_uri;
    sex: string;
    studies: (study_id | study_uri | study)[];
  }
  export type persondup_id = number;
  export type persondup_uri = ResourceUri;

  export interface referral extends Models.BaseModel {
    by: doctor_id | doctor_uri | doctor;
    closure_date: ApiDate;
    comment: string;
    created_on: ApiDateTime;
    date: ApiDate;
    expiry_date: ApiDate;
    id?: referral_id;
    letter: boolean;
    modified_on: ApiDateTime;
    person: person_id | person_uri | person;
    private: boolean;
    reason_for_closure: string;
    resource_uri?: referral_uri;
    self_referral: boolean;
    service_provider: serviceprovider_id | serviceprovider_uri | serviceprovider;
    source: referralsource_id | referralsource_uri | referralsource;
    staff_member: staffmember_id | staffmember_uri | staffmember;
    start_date: ApiDate;
    to: doctor_id | doctor_uri | doctor;
  }
  export type referral_id = number;
  export type referral_uri = ResourceUri;

  export interface referralsource extends Models.BaseModel {
    default: boolean;
    desc: string;
    id?: referralsource_id;
    name: string;
    order: number;
    resource_uri?: referralsource_uri;
    show_doctor_list: boolean;
  }
  export type referralsource_id = number;
  export type referralsource_uri = ResourceUri;

  export interface report extends Models.BaseModel {
    chart: string;
    count: number;
    desc: string;
    group_by: string[];
    id?: report_id;
    list_columns: string[];
    name: string;
    order_by: string[];
    owner: user_id | user_uri | user;
    query: any;
    resource: string;
    resource_uri?: report_uri;
    result: any[];
    study: study_id | study_uri | study;
  }
  export type report_id = number;
  export type report_uri = ResourceUri;

  export interface reportfrontpage extends Models.BaseModel {
    count: number;
    id?: reportfrontpage_id;
    order: number;
    report: report_id | report_uri | report;
    resource_uri?: reportfrontpage_uri;
  }
  export type reportfrontpage_id = number;
  export type reportfrontpage_uri = ResourceUri;

  export interface sample extends Models.BaseModel {
    _extra: ApiDict;
    amount: number;
    behaviour: samplebehaviour_id | samplebehaviour_uri | samplebehaviour;
    cls: sampleclass_id | sampleclass_uri | sampleclass;
    comments: string;
    concentration: number;
    data: ApiDict;
    display_unit: string;
    dna_extraction_protocol: dnaextractionprotocol_id | dnaextractionprotocol_uri | dnaextractionprotocol;
    id?: sample_id;
    location: {
      container: container_id | container_uri | container;
      id?: number;
      resource_uri?: string;
      x: number;
      y: number;
      z: number;
    };
    owner: person_id | person_uri | person;
    resource_uri?: sample_uri;
    specimen_id: string;
    stored_in: samplestoredin_id | samplestoredin_uri | samplestoredin;
    subtype: samplesubtype_id | samplesubtype_uri | samplesubtype;
    transactions: (transaction_id | transaction_uri | transaction)[];
    treatment: sampletreatment_id | sampletreatment_uri | sampletreatment;
  }
  export type sample_id = number;
  export type sample_uri = ResourceUri;

  export interface sampleadjustment extends Models.BaseModel {
    amount: number;
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    id?: sampleadjustment_id;
    resource_uri?: sampleadjustment_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type sampleadjustment_id = number;
  export type sampleadjustment_uri = ResourceUri;

  export interface samplebehaviour extends Models.BaseModel {
    default: boolean;
    id?: samplebehaviour_id;
    name: string;
    order: number;
    resource_uri?: samplebehaviour_uri;
  }
  export type samplebehaviour_id = number;
  export type samplebehaviour_uri = ResourceUri;

  export interface sampleclass extends Models.BaseModel {
    default: boolean;
    display_unit: string;
    id?: sampleclass_id;
    name: string;
    order: number;
    resource_uri?: sampleclass_uri;
    unit: string;
    unit_multiplier: number;
  }
  export type sampleclass_id = number;
  export type sampleclass_uri = ResourceUri;

  export interface samplecollection extends Models.BaseModel {
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    event: event_id | event_uri | event;
    id?: samplecollection_id;
    resource_uri?: samplecollection_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type samplecollection_id = number;
  export type samplecollection_uri = ResourceUri;

  export interface sampledestroy extends Models.BaseModel {
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    id?: sampledestroy_id;
    last_location: samplelocation_id | samplelocation_uri | samplelocation;
    resource_uri?: sampledestroy_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type sampledestroy_id = number;
  export type sampledestroy_uri = ResourceUri;

  export interface samplefrozenfixed extends Models.BaseModel {
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    id?: samplefrozenfixed_id;
    resource_uri?: samplefrozenfixed_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type samplefrozenfixed_id = number;
  export type samplefrozenfixed_uri = ResourceUri;

  export interface samplelocation extends Models.BaseModel {
    container: container_id | container_uri | container;
    containers: (container_id | container_uri | container)[];
    id?: samplelocation_id;
    resource_uri?: samplelocation_uri;
    x: number;
    y: number;
    z: number;
  }
  export type samplelocation_id = number;
  export type samplelocation_uri = ResourceUri;

  export interface samplemove extends Models.BaseModel {
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    fro: samplelocation_id | samplelocation_uri | samplelocation;
    id?: samplemove_id;
    resource_uri?: samplemove_uri;
    sample: sample_id | sample_uri | sample;
    to: samplelocation_id | samplelocation_uri | samplelocation;
    type: string;
  }
  export type samplemove_id = number;
  export type samplemove_uri = ResourceUri;

  export interface samplenote extends Models.BaseModel {
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    id?: samplenote_id;
    resource_uri?: samplenote_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type samplenote_id = number;
  export type samplenote_uri = ResourceUri;

  export interface sampleprocessed extends Models.BaseModel {
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    id?: sampleprocessed_id;
    resource_uri?: sampleprocessed_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type sampleprocessed_id = number;
  export type sampleprocessed_uri = ResourceUri;

  export interface samplesending extends Models.BaseModel {
    address: string;
    amount: number;
    collaborator: string;
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    id?: samplesending_id;
    last_location: samplelocation_id | samplelocation_uri | samplelocation;
    resource_uri?: samplesending_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type samplesending_id = number;
  export type samplesending_uri = ResourceUri;

  export interface samplesplit extends Models.BaseModel {
    comment: string;
    count: number;
    data: ApiDict;
    date: ApiDateTime;
    id?: samplesplit_id;
    resource_uri?: samplesplit_uri;
    sample: sample_id | sample_uri | sample;
    total_amount: number;
    type: string;
  }
  export type samplesplit_id = number;
  export type samplesplit_uri = ResourceUri;

  export interface samplestoredin extends Models.BaseModel {
    default: boolean;
    id?: samplestoredin_id;
    name: string;
    order: number;
    resource_uri?: samplestoredin_uri;
  }
  export type samplestoredin_id = number;
  export type samplestoredin_uri = ResourceUri;

  export interface samplesubcultured extends Models.BaseModel {
    comment: string;
    consumed_amount: number;
    created_amount: number;
    created_count: number;
    data: ApiDict;
    date: ApiDateTime;
    id?: samplesubcultured_id;
    resource_uri?: samplesubcultured_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type samplesubcultured_id = number;
  export type samplesubcultured_uri = ResourceUri;

  export interface samplesubculturedfrom extends Models.BaseModel {
    amount: number;
    comment: string;
    count: number;
    data: ApiDict;
    date: ApiDateTime;
    id?: samplesubculturedfrom_id;
    number: number;
    origin: transaction_id | transaction_uri | transaction;
    resource_uri?: samplesubculturedfrom_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type samplesubculturedfrom_id = number;
  export type samplesubculturedfrom_uri = ResourceUri;

  export interface samplesubdivision extends Models.BaseModel {
    amount: number;
    comment: string;
    count: number;
    data: ApiDict;
    date: ApiDateTime;
    id?: samplesubdivision_id;
    number: number;
    origin: transaction_id | transaction_uri | transaction;
    resource_uri?: samplesubdivision_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type samplesubdivision_id = number;
  export type samplesubdivision_uri = ResourceUri;

  export interface samplesubtype extends Models.BaseModel {
    cls: sampleclass_id | sampleclass_uri | sampleclass;
    default: boolean;
    id?: samplesubtype_id;
    name: string;
    order: number;
    resource_uri?: samplesubtype_uri;
  }
  export type samplesubtype_id = number;
  export type samplesubtype_uri = ResourceUri;

  export interface sampletreatment extends Models.BaseModel {
    default: boolean;
    id?: sampletreatment_id;
    name: string;
    order: number;
    resource_uri?: sampletreatment_uri;
  }
  export type sampletreatment_id = number;
  export type sampletreatment_uri = ResourceUri;

  export interface sampleuse extends Models.BaseModel {
    amount: number;
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    id?: sampleuse_id;
    resource_uri?: sampleuse_uri;
    sample: sample_id | sample_uri | sample;
    type: string;
  }
  export type sampleuse_id = number;
  export type sampleuse_uri = ResourceUri;

  export interface search extends Models.BaseModel {
    desc: string;
    id?: search_id;
    list_columns: string[];
    name: string;
    order_by: string[];
    owner: user_id | user_uri | user;
    query: any;
    resource: string;
    resource_uri?: search_uri;
    study: study_id | study_uri | study;
  }
  export type search_id = number;
  export type search_uri = ResourceUri;

  export interface serviceprovider extends Models.BaseModel {
    default: boolean;
    id?: serviceprovider_id;
    name: string;
    order: number;
    resource_uri?: serviceprovider_uri;
  }
  export type serviceprovider_id = number;
  export type serviceprovider_uri = ResourceUri;

  export interface staffmember extends Models.BaseModel {
    _extra: ApiDict;
    born: boolean;
    can_send_account: boolean;
    cause_of_death: string;
    comment: string;
    created_on: ApiDateTime;
    data: ApiDict;
    date_joined: ApiDateTime;
    deceased: boolean;
    default_service_provider: serviceprovider_id | serviceprovider_uri | serviceprovider;
    dob: ApiDate;
    dob_checked: boolean;
    dod: ApiDate;
    dod_checked: boolean;
    email: string;
    first_name: string;
    id?: staffmember_id;
    initials: string;
    is_active: boolean;
    is_superuser: boolean;
    last_login: ApiDateTime;
    last_name: string;
    maiden_name: string;
    mobile_phone_number: string;
    modified_on: ApiDateTime;
    other_name: string;
    password: string;
    password_change_date: ApiDateTime;
    patient_id: string;
    place_of_birth: string;
    private: boolean;
    resource_uri?: staffmember_uri;
    second_name: string;
    sex: string;
    title: title_id | title_uri | title;
    tokenless_login_allowed: boolean;
    twins_identical: boolean;
    type: staffmembertype_id | staffmembertype_uri | staffmembertype;
  }
  export type staffmember_id = number;
  export type staffmember_uri = ResourceUri;

  export interface staffmembertype extends Models.BaseModel {
    default: boolean;
    id?: staffmembertype_id;
    name: string;
    order: number;
    resource_uri?: staffmembertype_uri;
  }
  export type staffmembertype_id = number;
  export type staffmembertype_uri = ResourceUri;

  export interface state extends Models.BaseModel {
    abbrev: string;
    country: country_id | country_uri | country;
    id?: state_id;
    name: string;
    resource_uri?: state_uri;
    slug: string;
  }
  export type state_id = number;
  export type state_uri = ResourceUri;

  export interface study extends Models.BaseModel {
    archived: ApiDateTime;
    data: ApiDict;
    default: boolean;
    desc: string;
    id?: study_id;
    name: string;
    num_consent: number;
    num_members: number;
    order: number;
    resource_uri?: study_uri;
    slug: string;
  }
  export type study_id = number;
  export type study_uri = ResourceUri;

  export interface studyconsent extends Models.BaseModel {
    consented_by: consentobtainedby_id | consentobtainedby_uri | consentobtainedby;
    data: ApiDict;
    date: ApiDateTime;
    id?: studyconsent_id;
    resource_uri?: studyconsent_uri;
    status: consentstatus_id | consentstatus_uri | consentstatus;
    study_member: studymember_id | studymember_uri | studymember;
  }
  export type studyconsent_id = number;
  export type studyconsent_uri = ResourceUri;

  export interface studygroup extends Models.BaseModel {
    data: ApiDict;
    desc: string;
    id?: studygroup_id;
    members: (person_id | person_uri | person)[];
    name: string;
    owner: user_id | user_uri | user;
    resource_uri?: studygroup_uri;
    study: study_id | study_uri | study;
  }
  export type studygroup_id = number;
  export type studygroup_uri = ResourceUri;

  export interface studymember extends Models.BaseModel {
    consent_request_date: ApiDateTime;
    consents: (studyconsent_id | studyconsent_uri | studyconsent)[];
    id?: studymember_id;
    patient: person_id | person_uri | person;
    resource_uri?: studymember_uri;
    study: study_id | study_uri | study;
  }
  export type studymember_id = number;
  export type studymember_uri = ResourceUri;

  export interface suburb extends Models.BaseModel {
    id?: suburb_id;
    name: string;
    postcode: string;
    resource_uri?: suburb_uri;
    state: state_id | state_uri | state;
  }
  export type suburb_id = number;
  export type suburb_uri = ResourceUri;

  export interface surveillance extends Models.BaseModel {
    comment: string;
    created_on: ApiDateTime;
    date_done: ApiDate;
    date_due: ApiDate;
    date_reminder_sent: ApiDate;
    diagnosis: string;
    doctor: doctor_id | doctor_uri | doctor;
    id?: surveillance_id;
    interval: number;
    location: surveillancelocation_id | surveillancelocation_uri | surveillancelocation;
    modified_on: ApiDateTime;
    outcome: surveillanceoutcome_id | surveillanceoutcome_uri | surveillanceoutcome;
    person: person_id | person_uri | person;
    private: boolean;
    resource_uri?: surveillance_uri;
    service_provider: serviceprovider_id | serviceprovider_uri | serviceprovider;
    timing: surveillancetiming_id | surveillancetiming_uri | surveillancetiming;
    type: surveillancetype_id | surveillancetype_uri | surveillancetype;
  }
  export type surveillance_id = number;
  export type surveillance_uri = ResourceUri;

  export interface surveillancelocation extends Models.BaseModel {
    default: boolean;
    id?: surveillancelocation_id;
    name: string;
    order: number;
    resource_uri?: surveillancelocation_uri;
  }
  export type surveillancelocation_id = number;
  export type surveillancelocation_uri = ResourceUri;

  export interface surveillanceoutcome extends Models.BaseModel {
    default: boolean;
    id?: surveillanceoutcome_id;
    name: string;
    order: number;
    resource_uri?: surveillanceoutcome_uri;
  }
  export type surveillanceoutcome_id = number;
  export type surveillanceoutcome_uri = ResourceUri;

  export interface surveillancetiming extends Models.BaseModel {
    default: boolean;
    id?: surveillancetiming_id;
    name: string;
    order: number;
    resource_uri?: surveillancetiming_uri;
  }
  export type surveillancetiming_id = number;
  export type surveillancetiming_uri = ResourceUri;

  export interface surveillancetype extends Models.BaseModel {
    default: boolean;
    id?: surveillancetype_id;
    name: string;
    order: number;
    resource_uri?: surveillancetype_uri;
  }
  export type surveillancetype_id = number;
  export type surveillancetype_uri = ResourceUri;

  export interface title extends Models.BaseModel {
    default: boolean;
    id?: title_id;
    name: string;
    order: number;
    resource_uri?: title_uri;
  }
  export type title_id = number;
  export type title_uri = ResourceUri;

  export interface transaction extends Models.BaseModel {
    comment: string;
    data: ApiDict;
    date: ApiDateTime;
    id?: transaction_id;
    resource_uri?: transaction_uri;
    sample: sample_id | sample_uri | sample;
    sampleadjustment: sampleadjustment_id | sampleadjustment_uri | sampleadjustment;
    samplecollection: samplecollection_id | samplecollection_uri | samplecollection;
    sampledestroy: sampledestroy_id | sampledestroy_uri | sampledestroy;
    samplefrozenfixed: samplefrozenfixed_id | samplefrozenfixed_uri | samplefrozenfixed;
    samplemove: samplemove_id | samplemove_uri | samplemove;
    sampleprocessed: sampleprocessed_id | sampleprocessed_uri | sampleprocessed;
    samplesending: samplesending_id | samplesending_uri | samplesending;
    samplesplit: samplesplit_id | samplesplit_uri | samplesplit;
    samplesubcultured: samplesubcultured_id | samplesubcultured_uri | samplesubcultured;
    samplesubculturedfrom: samplesubculturedfrom_id | samplesubculturedfrom_uri | samplesubculturedfrom;
    samplesubdivision: samplesubdivision_id | samplesubdivision_uri | samplesubdivision;
    sampleuse: sampleuse_id | sampleuse_uri | sampleuse;
    type: string;
  }
  export type transaction_id = number;
  export type transaction_uri = ResourceUri;

  export interface treatment extends Models.BaseModel {
    comments: string;
    created_on: ApiDateTime;
    cycles: number;
    data: ApiDict;
    dose: number;
    id?: treatment_id;
    intervention: intervention_id | intervention_uri | intervention;
    modified_on: ApiDateTime;
    person: person_id | person_uri | person;
    private: boolean;
    resource_uri?: treatment_uri;
    start_date: ApiDate;
    stop_date: ApiDate;
    stop_reason: string;
  }
  export type treatment_id = number;
  export type treatment_uri = ResourceUri;

  export interface tumoursite extends Models.BaseModel {
    code: string;
    default: boolean;
    group: string;
    id?: tumoursite_id;
    name: string;
    order: number;
    resource_uri?: tumoursite_uri;
  }
  export type tumoursite_id = number;
  export type tumoursite_uri = ResourceUri;

  export interface tumourstage extends Models.BaseModel {
    default: boolean;
    desc: string;
    id?: tumourstage_id;
    name: string;
    order: number;
    resource_uri?: tumourstage_uri;
  }
  export type tumourstage_id = number;
  export type tumourstage_uri = ResourceUri;

  export interface user extends Models.BaseModel {
    current_password: string;
    email: string;
    first_name: string;
    groups: (group_id | group_uri | group)[];
    id?: user_id;
    is_active: boolean;
    is_superuser: boolean;
    last_name: string;
    level: number;
    mobile_phone_number: string;
    password: string;
    password_change_date: ApiDateTime;
    resource_uri?: user_uri;
    tokenless_login_allowed: boolean;
  }
  export type user_id = number;
  export type user_uri = ResourceUri;

  export interface userprefs extends Models.BaseModel {
    id?: userprefs_id;
    prefs: ApiDict;
    resource_uri?: userprefs_uri;
  }
  export type userprefs_id = number;
  export type userprefs_uri = ResourceUri;

  export interface usersession extends Models.BaseModel {
    email: string;
    first_name: string;
    groups: (group_id | group_uri | group)[];
    id?: usersession_id;
    is_active: boolean;
    is_superuser: boolean;
    last_name: string;
    level: number;
    mobile_phone_number: string;
    password_change_date: ApiDateTime;
    resource_uri?: usersession_uri;
    tokenless_login_allowed: boolean;
  }
  export type usersession_id = number;
  export type usersession_uri = ResourceUri;

}
// end of module GenModels (duh)
